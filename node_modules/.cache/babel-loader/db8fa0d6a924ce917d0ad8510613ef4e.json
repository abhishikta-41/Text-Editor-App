{"ast":null,"code":"import _slicedToArray from \"D:\\\\Programing\\\\React\\\\textutils\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Programing\\\\React\\\\textutils\\\\src\\\\App.js\";\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport Alert from \"./components/Alert\";\nimport Navbar from \"./components/Navbar\";\nimport Textform1 from \"./components/Textform1\";\nimport React, { useState } from \"react\";\n// import { Switch, Route } from \"react-router-dom\";\n//to\n// import { Routes ,Route } from 'react-router-dom';\n// import { BrowserRouter as Router } from \"react-router-dom\";\n\nfunction App() {\n  var _useState = useState(\"light\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    mode = _useState2[0],\n    setMode = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    alert = _useState4[0],\n    setAlert = _useState4[1];\n  var showAlert = function showAlert(message, type) {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(function () {\n      setAlert(null);\n    }, 3000);\n  };\n  var toggleMode = function toggleMode() {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\" Dark Mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n      setInterval(function () {\n        document.title = \"TextUtils is Amazing Mode\";\n      }, 2000);\n      setInterval(function () {\n        document.title = \"Install TextUtils Now\";\n      }, 1500);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\" Light Mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n    title: \"TextUtils\",\n    mode: mode,\n    about: \"About Us\",\n    toggleMode: toggleMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Alert, {\n    alert: alert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Textform1, {\n    showAlert: showAlert,\n    heading: \"Enter the text to analyze below\",\n    mode: mode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })));\n}\nexport default App;","map":{"version":3,"names":["About","Alert","Navbar","Textform1","React","useState","App","_useState","_useState2","_slicedToArray","mode","setMode","_useState3","_useState4","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title","setInterval","createElement","Fragment","about","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","heading"],"sources":["D:/Programing/React/textutils/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport About from \"./components/About\";\nimport Alert from \"./components/Alert\";\nimport Navbar from \"./components/Navbar\";\nimport Textform1 from \"./components/Textform1\";\nimport React, { useState } from \"react\";\n// import { Switch, Route } from \"react-router-dom\";\n//to\n// import { Routes ,Route } from 'react-router-dom';\n// import { BrowserRouter as Router } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\" Dark Mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n      setInterval(() => {\n        document.title = \"TextUtils is Amazing Mode\";\n      }, 2000);\n      setInterval(() => {\n        document.title = \"Install TextUtils Now\";\n      }, 1500);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\" Light Mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar\n          title=\"TextUtils\"\n          mode={mode}\n          about=\"About Us\"\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n        <Textform1\n                showAlert={showAlert}\n                heading=\"Enter the text to analyze below\"\n                mode={mode}\n              />\n          {/* <Routes> */}\n            {/* <Route exact path='/about' element={<About/>}/> */}\n            {/* <Route exact path='/' element={<Textform1\n                showAlert={showAlert}\n                heading=\"Enter the text to analyze below\"\n                mode={mode}\n              />}/> */}\n          {/* </Routes> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}